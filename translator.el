(require 'http-post-simple)
(require 'json)
(require 'highlight)
(setq translate-base-url "http://api.microsofttranslator.com/V2/Ajax.svc/GetTranslations?appId=%s&text=%s&from=%s&to=%s&maxTranslations=1")
(setq app-id "BDA70F4717D8A60A6040139011745A8A1E430FD5")

(defun ms-translate (from-code to-code text)
  (interactive "sFrom language code:\nsTo language code:\nsText:")
  (let* ((query-string (url-hexify-string text))
	 (translate-url (format translate-base-url app-id query-string from-code to-code))
	 (json-result (car (http-post-simple translate-url nil)))
	 (json (substring json-result 3 (length json-result))))
	  (decode-coding-string (cdar (elt (cdr (car (json-read-from-string (substring json-result 3)))) 0)) 'utf-8)))

(defun ms-translate-region (start end from-code to-code)
  (interactive "r\nsFrom language code:\nsTo language:")
  (let ((text (substring (buffer-string) (- start 1) (- end 1))))
    (replace-string text (ms-translate from-code to-code text) nil start end)))

(defun ms-translate-list (from-code to-code text-list)
  (defun ms-translate-list-iter (result-assoc remain-list)
    (if remain-list
	(let* ((text (car remain-list))
	       (translated-text (ms-translate from-code to-code text)))
	  (ms-translate-list-iter (cons (cons text translated-text) result-assoc) (cdr remain-list)))
	result-assoc))
  (ms-translate-list-iter nil text-list))

(defun ms-translate-start-regexp (from-code to-code regexp)
  (interactive "sFrom language code:\nsTo language:\nsRegexp:")
  (while (re-search-forward regexp nil t)
    (let* ((beginning (match-beginning 1))
	   (end (match-end 1))
	   (text (match-string 1)))
      (hlt-highlight -1)
      (hlt-highlight-region beginning end nil nil nil)
      (if (y-or-n-p "Translate?")
	  (progn
	    (let ((trans-text (ms-translate from-code to-code text)))
	      (replace-string text trans-text nil beginning end)))))))

(defun ms-translate-start-android (from-code to-code)
  (interactive "sFrom language code:\nsTo language:")
  (ms-translate-start-regexp from-code to-code "\">\\(.+\\)</"))
